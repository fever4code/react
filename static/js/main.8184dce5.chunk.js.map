{"version":3,"sources":["assets/default.jpg","Profile/Profile.js","Statistic/Statistic.js","FriendListItem/FriendListItem.js","FriendList/FriendList.js","TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","width","height","defaultProps","defaultImg","Statistics","title","randomColor","color","Math","floor","random","toString","slice","length","undefined","map","id","label","percentage","style","backgroundColor","FriendListItem","isOnline","FriendList","friends","TransactionHistory","items","index","type","amount","currency","App","user","statisticalData","transactions","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8184dce5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.071e115e.jpg\";","import React from \"react\";\r\nimport \"./Profile.css\";\r\nimport defaultImg from \"../assets/default.jpg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Profile({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) {\r\n  return (\r\n    <div className=\"profile__container\">\r\n      <img\r\n        className=\"profile__avatar\"\r\n        src={avatar}\r\n        alt={name}\r\n        width={100}\r\n        height={100}\r\n      />\r\n      <p className=\"profile__text profile__title\">{name}</p>\r\n      <p className=\"profile__text\">{`@${tag}`}</p>\r\n      <p className=\"profile__text profile__text__location\">{location}</p>\r\n      <ul className=\"profile__stats\">\r\n        <li className=\"profile__list__item\">\r\n          <span className=\"profile__label\">Followers</span>\r\n          <span className=\"profile__quantity\">{followers}</span>\r\n        </li>\r\n        <li className=\"profile__list__item\">\r\n          <span className=\"profile__label\">Views</span>\r\n          <span className=\"profile__quantity\">{views}</span>\r\n        </li>\r\n        <li className=\"profile__list__item\">\r\n          <span className=\"profile__label\">Likes</span>\r\n          <span className=\"profile__quantity\">{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultImg,\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./Statistic.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n  const randomColor = () => {\r\n    let color = Math.floor(Math.random() * 16777216).toString(16);\r\n    return \"#000000\".slice(0, -color.length) + color;\r\n  };\r\n\r\n  return (\r\n    <section className=\"stats__container\">\r\n      {title !== undefined && <h2 className=\"stats__title\">{title}</h2>}\r\n      <ul className=\"stats__list\">\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            key={id}\r\n            className=\"stats__item\"\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span className=\"stats__label\">{label}</span>\r\n            <span className=\"stats__percentage\">{`${percentage}%`}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport \"./FriendListItem.css\";\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <>\r\n      <span className={isOnline ? \"statusOnline\" : \"statusOffline\"}></span>\r\n      <img src={avatar} alt={name} width=\"48\" className=\"avatar\" />\r\n      <p className=\"friendListItem__name\">{name}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport \"./FriendList.css\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className=\"friendList__container\">\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <li key={id} className=\"friendList__item\">\r\n          <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport \"./TransactionHistory.css\";\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className=\"tr__container\">\r\n      <thead className=\"tr__head\">\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }, index) => (\r\n          <tr className={index % 2 === 1 && \"tr__active\"} key={id}>\r\n            <td className=\"tr__item\">{type}</td>\r\n            <td className=\"tr__item\">{amount}</td>\r\n            <td className=\"tr__item\">{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from \"react\";\nimport Profile from \"./Profile/Profile\";\nimport Statistics from \"../src/Statistic/Statistic\";\nimport FriendList from \"../src/FriendList/FriendList\";\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\nimport user from \"./assets/user.json\";\nimport statisticalData from \"./assets/statistical-data.json\";\nimport friends from \"./assets/friends.json\";\nimport transactions from \"./assets/transactions.json\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <Statistics stats={statisticalData} />\n        <FriendList friends={friends} />\n        <TransactionHistory items={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}